// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validation should throw an error on the "dependencies" option with "{"peer":"bar"}" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.dependencies.peer should be a boolean.
   -> Install missing peer dependencies.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#peer"
`;

exports[`validation should throw an error on the "dependencies" option with "{"peer":10}" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.dependencies.peer should be a boolean.
   -> Install missing peer dependencies.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#peer"
`;

exports[`validation should throw an error on the "packageManager" option with "{"type":"foo"}" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.packageManager.type should be one of these:
   \\"npm\\" | \\"pnpm\\" | \\"yarn\\""
`;

exports[`validation should throw an error on the "packageManager" option with "{"type":"npm","options":{"arguments":"10"}}" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.packageManager.options.arguments should be an array:
   [non-empty string, ...] (should not have fewer than 1 item)
   -> Provide custom arguments for package manager.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#arguments"
`;

exports[`validation should throw an error on the "packageManager" option with "{"type":"npm","options":{"arguments":[]}}" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.packageManager.options.arguments should be a non-empty array.
   -> Provide custom arguments for package manager.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#arguments"
`;

exports[`validation should throw an error on the "packageManager" option with "{"type":"npm","options":{"dev":"foo"}}" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.packageManager.options.dev should be a boolean.
   -> Install as development dependencies.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#dev"
`;

exports[`validation should throw an error on the "packageManager" option with "{"type":"npm","options":{"quiet":"foo"}}" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.packageManager.options.quiet should be a boolean.
   -> Reduce the amount of console logging.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#quiet"
`;

exports[`validation should throw an error on the "packageManager" option with "{"type":"npm","options":{"test":"foo"}}" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.packageManager.options has an unknown property 'test'. These properties are valid:
   object { arguments?, dev?, quiet? }"
`;

exports[`validation should throw an error on the "packageManager" option with "foo" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.packageManager should be one of these:
   \\"npm\\" | \\"pnpm\\" | \\"yarn\\" | object { type?, options? } | function
   -> Package manager to use for installing dependencies.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#packagemanager
   Details:
    * options.packageManager should be one of these:
      \\"npm\\" | \\"pnpm\\" | \\"yarn\\"
    * options.packageManager should be an object:
      object { type?, options? }
      -> package manager related options.
    * options.packageManager should be an instance of function."
`;

exports[`validation should throw an error on the "prompt" option with "10" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.prompt should be a boolean.
   -> Show a prompt to confirm installation.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#prompt"
`;

exports[`validation should throw an error on the "prompt" option with "bar" value 1`] = `
"Invalid options object. Install Plugin has been initialized using an options object that does not match the API schema.
 - options.prompt should be a boolean.
   -> Show a prompt to confirm installation.
   -> Read more at https://github.com/webpack-contrib/install-webpack-plugin/#prompt"
`;
